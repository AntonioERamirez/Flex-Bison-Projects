Grammar

    0 $accept: function $end

    1 function: function_header_ variable_ body

    2 function_header_: function_header ';'
    3                 | error ';'

    4 function_header: FUNCTION IDENTIFIER parameters RETURNS type

    5 parameters: parameter
    6           | parameter ',' parameters
    7           | %empty

    8 parameter: IDENTIFIER ':' type

    9 variable_: variable
   10          | error

   11 variable: variable IDENTIFIER ':' type IS statement_
   12         | %empty

   13 type: INTEGER
   14     | REAL
   15     | BOOLEAN

   16 body: BEGIN_ statements END ';'

   17 statements: statements statement_
   18           | %empty

   19 statement_: statement ';'
   20           | error ';'

   21 statement: expression
   22          | IF expression THEN statement_ ELSE statement_ ENDIF
   23          | CASE expression IS cases OTHERS ARROW statement_ ENDCASE
   24          | REDUCE operator reductions ENDREDUCE

   25 cases: cases case_
   26      | %empty

   27 case_: case ';'
   28      | error ';'

   29 case: WHEN INT_LITERAL ARROW statement

   30 operator: ADDOP
   31         | MULOP

   32 reductions: reductions statement_
   33           | %empty

   34 expression: expression OROP conjunct
   35           | conjunct

   36 conjunct: conjunct ANDOP relation
   37         | relation

   38 relation: relation RELOP term
   39         | term

   40 term: term ADDOP factor
   41     | factor

   42 factor: factor MULOP exponent
   43       | factor REMOP exponent
   44       | exponent

   45 exponent: negation EXPOP exponent
   46         | negation

   47 negation: NOTOP primary
   48         | primary

   49 primary: '(' expression ')'
   50        | INT_LITERAL
   51        | REAL_LITERAL
   52        | BOOL_LITERAL
   53        | IDENTIFIER


Terminals, with rules where they appear

$end (0) 0
'(' (40) 49
')' (41) 49
',' (44) 6
':' (58) 8 11
';' (59) 2 3 16 19 20 27 28
error (256) 3 10 20 28
IDENTIFIER (258) 4 8 11 53
INT_LITERAL (259) 29 50
REAL_LITERAL (260) 51
BOOL_LITERAL (261) 52
ADDOP (262) 30 40
MULOP (263) 31 42
REMOP (264) 43
EXPOP (265) 45
RELOP (266) 38
ANDOP (267) 36
OROP (268) 34
NOTOP (269) 47
ARROW (270) 23 29
BEGIN_ (271) 16
BOOLEAN (272) 15
CASE (273) 23
ELSE (274) 22
END (275) 16
ENDIF (276) 22
ENDCASE (277) 23
ENDREDUCE (278) 24
FUNCTION (279) 4
IF (280) 22
INTEGER (281) 13
IS (282) 11 23
OTHERS (283) 23
REAL (284) 14
REDUCE (285) 24
RETURNS (286) 4
THEN (287) 22
WHEN (288) 29


Nonterminals, with rules where they appear

$accept (39)
    on left: 0
function (40)
    on left: 1, on right: 0
function_header_ (41)
    on left: 2 3, on right: 1
function_header (42)
    on left: 4, on right: 2
parameters (43)
    on left: 5 6 7, on right: 4 6
parameter (44)
    on left: 8, on right: 5 6
variable_ (45)
    on left: 9 10, on right: 1
variable (46)
    on left: 11 12, on right: 9 11
type (47)
    on left: 13 14 15, on right: 4 8 11
body (48)
    on left: 16, on right: 1
statements (49)
    on left: 17 18, on right: 16 17
statement_ (50)
    on left: 19 20, on right: 11 17 22 23 32
statement (51)
    on left: 21 22 23 24, on right: 19 29
cases (52)
    on left: 25 26, on right: 23 25
case_ (53)
    on left: 27 28, on right: 25
case (54)
    on left: 29, on right: 27
operator (55)
    on left: 30 31, on right: 24
reductions (56)
    on left: 32 33, on right: 24 32
expression (57)
    on left: 34 35, on right: 21 22 23 34 49
conjunct (58)
    on left: 36 37, on right: 34 35 36
relation (59)
    on left: 38 39, on right: 36 37 38
term (60)
    on left: 40 41, on right: 38 39 40
factor (61)
    on left: 42 43 44, on right: 40 41 42 43
exponent (62)
    on left: 45 46, on right: 42 43 44 45
negation (63)
    on left: 47 48, on right: 45 46
primary (64)
    on left: 49 50 51 52 53, on right: 47 48


State 0

    0 $accept: . function $end

    error     shift, and go to state 1
    FUNCTION  shift, and go to state 2

    function          go to state 3
    function_header_  go to state 4
    function_header   go to state 5


State 1

    3 function_header_: error . ';'

    ';'  shift, and go to state 6


State 2

    4 function_header: FUNCTION . IDENTIFIER parameters RETURNS type

    IDENTIFIER  shift, and go to state 7


State 3

    0 $accept: function . $end

    $end  shift, and go to state 8


State 4

    1 function: function_header_ . variable_ body

    error  shift, and go to state 9

    IDENTIFIER  reduce using rule 12 (variable)
    BEGIN_      reduce using rule 12 (variable)

    variable_  go to state 10
    variable   go to state 11


State 5

    2 function_header_: function_header . ';'

    ';'  shift, and go to state 12


State 6

    3 function_header_: error ';' .

    $default  reduce using rule 3 (function_header_)


State 7

    4 function_header: FUNCTION IDENTIFIER . parameters RETURNS type

    IDENTIFIER  shift, and go to state 13

    $default  reduce using rule 7 (parameters)

    parameters  go to state 14
    parameter   go to state 15


State 8

    0 $accept: function $end .

    $default  accept


State 9

   10 variable_: error .

    $default  reduce using rule 10 (variable_)


State 10

    1 function: function_header_ variable_ . body

    BEGIN_  shift, and go to state 16

    body  go to state 17


State 11

    9 variable_: variable .
   11 variable: variable . IDENTIFIER ':' type IS statement_

    IDENTIFIER  shift, and go to state 18

    $default  reduce using rule 9 (variable_)


State 12

    2 function_header_: function_header ';' .

    $default  reduce using rule 2 (function_header_)


State 13

    8 parameter: IDENTIFIER . ':' type

    ':'  shift, and go to state 19


State 14

    4 function_header: FUNCTION IDENTIFIER parameters . RETURNS type

    RETURNS  shift, and go to state 20


State 15

    5 parameters: parameter .
    6           | parameter . ',' parameters

    ','  shift, and go to state 21

    $default  reduce using rule 5 (parameters)


State 16

   16 body: BEGIN_ . statements END ';'

    $default  reduce using rule 18 (statements)

    statements  go to state 22


State 17

    1 function: function_header_ variable_ body .

    $default  reduce using rule 1 (function)


State 18

   11 variable: variable IDENTIFIER . ':' type IS statement_

    ':'  shift, and go to state 23


State 19

    8 parameter: IDENTIFIER ':' . type

    BOOLEAN  shift, and go to state 24
    INTEGER  shift, and go to state 25
    REAL     shift, and go to state 26

    type  go to state 27


State 20

    4 function_header: FUNCTION IDENTIFIER parameters RETURNS . type

    BOOLEAN  shift, and go to state 24
    INTEGER  shift, and go to state 25
    REAL     shift, and go to state 26

    type  go to state 28


State 21

    6 parameters: parameter ',' . parameters

    IDENTIFIER  shift, and go to state 13

    $default  reduce using rule 7 (parameters)

    parameters  go to state 29
    parameter   go to state 15


State 22

   16 body: BEGIN_ statements . END ';'
   17 statements: statements . statement_

    error         shift, and go to state 30
    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    REAL_LITERAL  shift, and go to state 33
    BOOL_LITERAL  shift, and go to state 34
    NOTOP         shift, and go to state 35
    CASE          shift, and go to state 36
    END           shift, and go to state 37
    IF            shift, and go to state 38
    REDUCE        shift, and go to state 39
    '('           shift, and go to state 40

    statement_  go to state 41
    statement   go to state 42
    expression  go to state 43
    conjunct    go to state 44
    relation    go to state 45
    term        go to state 46
    factor      go to state 47
    exponent    go to state 48
    negation    go to state 49
    primary     go to state 50


State 23

   11 variable: variable IDENTIFIER ':' . type IS statement_

    BOOLEAN  shift, and go to state 24
    INTEGER  shift, and go to state 25
    REAL     shift, and go to state 26

    type  go to state 51


State 24

   15 type: BOOLEAN .

    $default  reduce using rule 15 (type)


State 25

   13 type: INTEGER .

    $default  reduce using rule 13 (type)


State 26

   14 type: REAL .

    $default  reduce using rule 14 (type)


State 27

    8 parameter: IDENTIFIER ':' type .

    $default  reduce using rule 8 (parameter)


State 28

    4 function_header: FUNCTION IDENTIFIER parameters RETURNS type .

    $default  reduce using rule 4 (function_header)


State 29

    6 parameters: parameter ',' parameters .

    $default  reduce using rule 6 (parameters)


State 30

   20 statement_: error . ';'

    ';'  shift, and go to state 52


State 31

   53 primary: IDENTIFIER .

    $default  reduce using rule 53 (primary)


State 32

   50 primary: INT_LITERAL .

    $default  reduce using rule 50 (primary)


State 33

   51 primary: REAL_LITERAL .

    $default  reduce using rule 51 (primary)


State 34

   52 primary: BOOL_LITERAL .

    $default  reduce using rule 52 (primary)


State 35

   47 negation: NOTOP . primary

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    REAL_LITERAL  shift, and go to state 33
    BOOL_LITERAL  shift, and go to state 34
    '('           shift, and go to state 40

    primary  go to state 53


State 36

   23 statement: CASE . expression IS cases OTHERS ARROW statement_ ENDCASE

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    REAL_LITERAL  shift, and go to state 33
    BOOL_LITERAL  shift, and go to state 34
    NOTOP         shift, and go to state 35
    '('           shift, and go to state 40

    expression  go to state 54
    conjunct    go to state 44
    relation    go to state 45
    term        go to state 46
    factor      go to state 47
    exponent    go to state 48
    negation    go to state 49
    primary     go to state 50


State 37

   16 body: BEGIN_ statements END . ';'

    ';'  shift, and go to state 55


State 38

   22 statement: IF . expression THEN statement_ ELSE statement_ ENDIF

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    REAL_LITERAL  shift, and go to state 33
    BOOL_LITERAL  shift, and go to state 34
    NOTOP         shift, and go to state 35
    '('           shift, and go to state 40

    expression  go to state 56
    conjunct    go to state 44
    relation    go to state 45
    term        go to state 46
    factor      go to state 47
    exponent    go to state 48
    negation    go to state 49
    primary     go to state 50


State 39

   24 statement: REDUCE . operator reductions ENDREDUCE

    ADDOP  shift, and go to state 57
    MULOP  shift, and go to state 58

    operator  go to state 59


State 40

   49 primary: '(' . expression ')'

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    REAL_LITERAL  shift, and go to state 33
    BOOL_LITERAL  shift, and go to state 34
    NOTOP         shift, and go to state 35
    '('           shift, and go to state 40

    expression  go to state 60
    conjunct    go to state 44
    relation    go to state 45
    term        go to state 46
    factor      go to state 47
    exponent    go to state 48
    negation    go to state 49
    primary     go to state 50


State 41

   17 statements: statements statement_ .

    $default  reduce using rule 17 (statements)


State 42

   19 statement_: statement . ';'

    ';'  shift, and go to state 61


State 43

   21 statement: expression .
   34 expression: expression . OROP conjunct

    OROP  shift, and go to state 62

    $default  reduce using rule 21 (statement)


State 44

   35 expression: conjunct .
   36 conjunct: conjunct . ANDOP relation

    ANDOP  shift, and go to state 63

    $default  reduce using rule 35 (expression)


State 45

   37 conjunct: relation .
   38 relation: relation . RELOP term

    RELOP  shift, and go to state 64

    $default  reduce using rule 37 (conjunct)


State 46

   39 relation: term .
   40 term: term . ADDOP factor

    ADDOP  shift, and go to state 65

    $default  reduce using rule 39 (relation)


State 47

   41 term: factor .
   42 factor: factor . MULOP exponent
   43       | factor . REMOP exponent

    MULOP  shift, and go to state 66
    REMOP  shift, and go to state 67

    $default  reduce using rule 41 (term)


State 48

   44 factor: exponent .

    $default  reduce using rule 44 (factor)


State 49

   45 exponent: negation . EXPOP exponent
   46         | negation .

    EXPOP  shift, and go to state 68

    $default  reduce using rule 46 (exponent)


State 50

   48 negation: primary .

    $default  reduce using rule 48 (negation)


State 51

   11 variable: variable IDENTIFIER ':' type . IS statement_

    IS  shift, and go to state 69


State 52

   20 statement_: error ';' .

    $default  reduce using rule 20 (statement_)


State 53

   47 negation: NOTOP primary .

    $default  reduce using rule 47 (negation)


State 54

   23 statement: CASE expression . IS cases OTHERS ARROW statement_ ENDCASE
   34 expression: expression . OROP conjunct

    OROP  shift, and go to state 62
    IS    shift, and go to state 70


State 55

   16 body: BEGIN_ statements END ';' .

    $default  reduce using rule 16 (body)


State 56

   22 statement: IF expression . THEN statement_ ELSE statement_ ENDIF
   34 expression: expression . OROP conjunct

    OROP  shift, and go to state 62
    THEN  shift, and go to state 71


State 57

   30 operator: ADDOP .

    $default  reduce using rule 30 (operator)


State 58

   31 operator: MULOP .

    $default  reduce using rule 31 (operator)


State 59

   24 statement: REDUCE operator . reductions ENDREDUCE

    $default  reduce using rule 33 (reductions)

    reductions  go to state 72


State 60

   34 expression: expression . OROP conjunct
   49 primary: '(' expression . ')'

    OROP  shift, and go to state 62
    ')'   shift, and go to state 73


State 61

   19 statement_: statement ';' .

    $default  reduce using rule 19 (statement_)


State 62

   34 expression: expression OROP . conjunct

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    REAL_LITERAL  shift, and go to state 33
    BOOL_LITERAL  shift, and go to state 34
    NOTOP         shift, and go to state 35
    '('           shift, and go to state 40

    conjunct  go to state 74
    relation  go to state 45
    term      go to state 46
    factor    go to state 47
    exponent  go to state 48
    negation  go to state 49
    primary   go to state 50


State 63

   36 conjunct: conjunct ANDOP . relation

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    REAL_LITERAL  shift, and go to state 33
    BOOL_LITERAL  shift, and go to state 34
    NOTOP         shift, and go to state 35
    '('           shift, and go to state 40

    relation  go to state 75
    term      go to state 46
    factor    go to state 47
    exponent  go to state 48
    negation  go to state 49
    primary   go to state 50


State 64

   38 relation: relation RELOP . term

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    REAL_LITERAL  shift, and go to state 33
    BOOL_LITERAL  shift, and go to state 34
    NOTOP         shift, and go to state 35
    '('           shift, and go to state 40

    term      go to state 76
    factor    go to state 47
    exponent  go to state 48
    negation  go to state 49
    primary   go to state 50


State 65

   40 term: term ADDOP . factor

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    REAL_LITERAL  shift, and go to state 33
    BOOL_LITERAL  shift, and go to state 34
    NOTOP         shift, and go to state 35
    '('           shift, and go to state 40

    factor    go to state 77
    exponent  go to state 48
    negation  go to state 49
    primary   go to state 50


State 66

   42 factor: factor MULOP . exponent

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    REAL_LITERAL  shift, and go to state 33
    BOOL_LITERAL  shift, and go to state 34
    NOTOP         shift, and go to state 35
    '('           shift, and go to state 40

    exponent  go to state 78
    negation  go to state 49
    primary   go to state 50


State 67

   43 factor: factor REMOP . exponent

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    REAL_LITERAL  shift, and go to state 33
    BOOL_LITERAL  shift, and go to state 34
    NOTOP         shift, and go to state 35
    '('           shift, and go to state 40

    exponent  go to state 79
    negation  go to state 49
    primary   go to state 50


State 68

   45 exponent: negation EXPOP . exponent

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    REAL_LITERAL  shift, and go to state 33
    BOOL_LITERAL  shift, and go to state 34
    NOTOP         shift, and go to state 35
    '('           shift, and go to state 40

    exponent  go to state 80
    negation  go to state 49
    primary   go to state 50


State 69

   11 variable: variable IDENTIFIER ':' type IS . statement_

    error         shift, and go to state 30
    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    REAL_LITERAL  shift, and go to state 33
    BOOL_LITERAL  shift, and go to state 34
    NOTOP         shift, and go to state 35
    CASE          shift, and go to state 36
    IF            shift, and go to state 38
    REDUCE        shift, and go to state 39
    '('           shift, and go to state 40

    statement_  go to state 81
    statement   go to state 42
    expression  go to state 43
    conjunct    go to state 44
    relation    go to state 45
    term        go to state 46
    factor      go to state 47
    exponent    go to state 48
    negation    go to state 49
    primary     go to state 50


State 70

   23 statement: CASE expression IS . cases OTHERS ARROW statement_ ENDCASE

    $default  reduce using rule 26 (cases)

    cases  go to state 82


State 71

   22 statement: IF expression THEN . statement_ ELSE statement_ ENDIF

    error         shift, and go to state 30
    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    REAL_LITERAL  shift, and go to state 33
    BOOL_LITERAL  shift, and go to state 34
    NOTOP         shift, and go to state 35
    CASE          shift, and go to state 36
    IF            shift, and go to state 38
    REDUCE        shift, and go to state 39
    '('           shift, and go to state 40

    statement_  go to state 83
    statement   go to state 42
    expression  go to state 43
    conjunct    go to state 44
    relation    go to state 45
    term        go to state 46
    factor      go to state 47
    exponent    go to state 48
    negation    go to state 49
    primary     go to state 50


State 72

   24 statement: REDUCE operator reductions . ENDREDUCE
   32 reductions: reductions . statement_

    error         shift, and go to state 30
    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    REAL_LITERAL  shift, and go to state 33
    BOOL_LITERAL  shift, and go to state 34
    NOTOP         shift, and go to state 35
    CASE          shift, and go to state 36
    ENDREDUCE     shift, and go to state 84
    IF            shift, and go to state 38
    REDUCE        shift, and go to state 39
    '('           shift, and go to state 40

    statement_  go to state 85
    statement   go to state 42
    expression  go to state 43
    conjunct    go to state 44
    relation    go to state 45
    term        go to state 46
    factor      go to state 47
    exponent    go to state 48
    negation    go to state 49
    primary     go to state 50


State 73

   49 primary: '(' expression ')' .

    $default  reduce using rule 49 (primary)


State 74

   34 expression: expression OROP conjunct .
   36 conjunct: conjunct . ANDOP relation

    ANDOP  shift, and go to state 63

    $default  reduce using rule 34 (expression)


State 75

   36 conjunct: conjunct ANDOP relation .
   38 relation: relation . RELOP term

    RELOP  shift, and go to state 64

    $default  reduce using rule 36 (conjunct)


State 76

   38 relation: relation RELOP term .
   40 term: term . ADDOP factor

    ADDOP  shift, and go to state 65

    $default  reduce using rule 38 (relation)


State 77

   40 term: term ADDOP factor .
   42 factor: factor . MULOP exponent
   43       | factor . REMOP exponent

    MULOP  shift, and go to state 66
    REMOP  shift, and go to state 67

    $default  reduce using rule 40 (term)


State 78

   42 factor: factor MULOP exponent .

    $default  reduce using rule 42 (factor)


State 79

   43 factor: factor REMOP exponent .

    $default  reduce using rule 43 (factor)


State 80

   45 exponent: negation EXPOP exponent .

    $default  reduce using rule 45 (exponent)


State 81

   11 variable: variable IDENTIFIER ':' type IS statement_ .

    $default  reduce using rule 11 (variable)


State 82

   23 statement: CASE expression IS cases . OTHERS ARROW statement_ ENDCASE
   25 cases: cases . case_

    error   shift, and go to state 86
    OTHERS  shift, and go to state 87
    WHEN    shift, and go to state 88

    case_  go to state 89
    case   go to state 90


State 83

   22 statement: IF expression THEN statement_ . ELSE statement_ ENDIF

    ELSE  shift, and go to state 91


State 84

   24 statement: REDUCE operator reductions ENDREDUCE .

    $default  reduce using rule 24 (statement)


State 85

   32 reductions: reductions statement_ .

    $default  reduce using rule 32 (reductions)


State 86

   28 case_: error . ';'

    ';'  shift, and go to state 92


State 87

   23 statement: CASE expression IS cases OTHERS . ARROW statement_ ENDCASE

    ARROW  shift, and go to state 93


State 88

   29 case: WHEN . INT_LITERAL ARROW statement

    INT_LITERAL  shift, and go to state 94


State 89

   25 cases: cases case_ .

    $default  reduce using rule 25 (cases)


State 90

   27 case_: case . ';'

    ';'  shift, and go to state 95


State 91

   22 statement: IF expression THEN statement_ ELSE . statement_ ENDIF

    error         shift, and go to state 30
    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    REAL_LITERAL  shift, and go to state 33
    BOOL_LITERAL  shift, and go to state 34
    NOTOP         shift, and go to state 35
    CASE          shift, and go to state 36
    IF            shift, and go to state 38
    REDUCE        shift, and go to state 39
    '('           shift, and go to state 40

    statement_  go to state 96
    statement   go to state 42
    expression  go to state 43
    conjunct    go to state 44
    relation    go to state 45
    term        go to state 46
    factor      go to state 47
    exponent    go to state 48
    negation    go to state 49
    primary     go to state 50


State 92

   28 case_: error ';' .

    $default  reduce using rule 28 (case_)


State 93

   23 statement: CASE expression IS cases OTHERS ARROW . statement_ ENDCASE

    error         shift, and go to state 30
    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    REAL_LITERAL  shift, and go to state 33
    BOOL_LITERAL  shift, and go to state 34
    NOTOP         shift, and go to state 35
    CASE          shift, and go to state 36
    IF            shift, and go to state 38
    REDUCE        shift, and go to state 39
    '('           shift, and go to state 40

    statement_  go to state 97
    statement   go to state 42
    expression  go to state 43
    conjunct    go to state 44
    relation    go to state 45
    term        go to state 46
    factor      go to state 47
    exponent    go to state 48
    negation    go to state 49
    primary     go to state 50


State 94

   29 case: WHEN INT_LITERAL . ARROW statement

    ARROW  shift, and go to state 98


State 95

   27 case_: case ';' .

    $default  reduce using rule 27 (case_)


State 96

   22 statement: IF expression THEN statement_ ELSE statement_ . ENDIF

    ENDIF  shift, and go to state 99


State 97

   23 statement: CASE expression IS cases OTHERS ARROW statement_ . ENDCASE

    ENDCASE  shift, and go to state 100


State 98

   29 case: WHEN INT_LITERAL ARROW . statement

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    REAL_LITERAL  shift, and go to state 33
    BOOL_LITERAL  shift, and go to state 34
    NOTOP         shift, and go to state 35
    CASE          shift, and go to state 36
    IF            shift, and go to state 38
    REDUCE        shift, and go to state 39
    '('           shift, and go to state 40

    statement   go to state 101
    expression  go to state 43
    conjunct    go to state 44
    relation    go to state 45
    term        go to state 46
    factor      go to state 47
    exponent    go to state 48
    negation    go to state 49
    primary     go to state 50


State 99

   22 statement: IF expression THEN statement_ ELSE statement_ ENDIF .

    $default  reduce using rule 22 (statement)


State 100

   23 statement: CASE expression IS cases OTHERS ARROW statement_ ENDCASE .

    $default  reduce using rule 23 (statement)


State 101

   29 case: WHEN INT_LITERAL ARROW statement .

    $default  reduce using rule 29 (case)
