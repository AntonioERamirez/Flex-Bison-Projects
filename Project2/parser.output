Grammar

    0 $accept: function $end

    1 function: function_header_ variable_ body

    2 function_header_: function_header ';'
    3                 | error ';'

    4 function_header: FUNCTION IDENTIFIER parameters RETURNS type

    5 parameters: parameter
    6           | parameter ',' parameters
    7           | %empty

    8 parameter: IDENTIFIER ':' type

    9 variable_: variable
   10          | error

   11 variable: variable IDENTIFIER ':' type IS statement_
   12         | %empty

   13 type: INTEGER
   14     | REAL
   15     | BOOLEAN

   16 body: BEGIN_ statement_ END ';'

   17 statement_: statement ';'
   18           | error ';'

   19 statement: expression
   20          | REDUCE operator reductions ENDREDUCE
   21          | IF expression THEN statement ';' ELSE statement ';' ENDIF
   22          | CASE expression IS case_ OTHERS ARROW statement ';' ENDCASE

   23 case_: case
   24      | error

   25 case: case WHEN INT_LITERAL ARROW statement_
   26     | %empty

   27 operator: ADDOP
   28         | MULOP

   29 reductions: reductions statement_
   30           | %empty

   31 expression: expression OROP and
   32           | and

   33 and: and ANDOP relation
   34    | relation

   35 relation: relation RELOP term
   36         | term

   37 term: term ADDOP factor
   38     | factor

   39 factor: factor MULOP exponent
   40       | factor REMOP exponent
   41       | exponent

   42 exponent: negation EXPOP exponent
   43         | negation

   44 negation: NOTOP primary
   45         | primary

   46 primary: '(' expression ')'
   47        | INT_LITERAL
   48        | REAL_LITERAL
   49        | BOOL_LITERAL
   50        | IDENTIFIER


Terminals, with rules where they appear

$end (0) 0
'(' (40) 46
')' (41) 46
',' (44) 6
':' (58) 8 11
';' (59) 2 3 16 17 18 21 22
error (256) 3 10 18 24
IDENTIFIER (258) 4 8 11 50
INT_LITERAL (259) 25 47
ADDOP (260) 27 37
MULOP (261) 28 39
RELOP (262) 35
ANDOP (263) 33
EXPOP (264) 42
OROP (265) 31
NOTOP (266) 44
REMOP (267) 40
BEGIN_ (268) 16
BOOLEAN (269) 15
END (270) 16
ENDREDUCE (271) 20
FUNCTION (272) 4
INTEGER (273) 13
IS (274) 11 22
REDUCE (275) 20
RETURNS (276) 4
ARROW (277) 22 25
CASE (278) 22
ELSE (279) 21
ENDCASE (280) 22
ENDIF (281) 21
IF (282) 21
OTHERS (283) 22
REAL (284) 14
THEN (285) 21
WHEN (286) 25
BOOL_LITERAL (287) 49
REAL_LITERAL (288) 48


Nonterminals, with rules where they appear

$accept (39)
    on left: 0
function (40)
    on left: 1, on right: 0
function_header_ (41)
    on left: 2 3, on right: 1
function_header (42)
    on left: 4, on right: 2
parameters (43)
    on left: 5 6 7, on right: 4 6
parameter (44)
    on left: 8, on right: 5 6
variable_ (45)
    on left: 9 10, on right: 1
variable (46)
    on left: 11 12, on right: 9 11
type (47)
    on left: 13 14 15, on right: 4 8 11
body (48)
    on left: 16, on right: 1
statement_ (49)
    on left: 17 18, on right: 11 16 25 29
statement (50)
    on left: 19 20 21 22, on right: 17 21 22
case_ (51)
    on left: 23 24, on right: 22
case (52)
    on left: 25 26, on right: 23 25
operator (53)
    on left: 27 28, on right: 20
reductions (54)
    on left: 29 30, on right: 20 29
expression (55)
    on left: 31 32, on right: 19 21 22 31 46
and (56)
    on left: 33 34, on right: 31 32 33
relation (57)
    on left: 35 36, on right: 33 34 35
term (58)
    on left: 37 38, on right: 35 36 37
factor (59)
    on left: 39 40 41, on right: 37 38 39 40
exponent (60)
    on left: 42 43, on right: 39 40 41 42
negation (61)
    on left: 44 45, on right: 42 43
primary (62)
    on left: 46 47 48 49 50, on right: 44 45


State 0

    0 $accept: . function $end

    error     shift, and go to state 1
    FUNCTION  shift, and go to state 2

    function          go to state 3
    function_header_  go to state 4
    function_header   go to state 5


State 1

    3 function_header_: error . ';'

    ';'  shift, and go to state 6


State 2

    4 function_header: FUNCTION . IDENTIFIER parameters RETURNS type

    IDENTIFIER  shift, and go to state 7


State 3

    0 $accept: function . $end

    $end  shift, and go to state 8


State 4

    1 function: function_header_ . variable_ body

    error  shift, and go to state 9

    IDENTIFIER  reduce using rule 12 (variable)
    BEGIN_      reduce using rule 12 (variable)

    variable_  go to state 10
    variable   go to state 11


State 5

    2 function_header_: function_header . ';'

    ';'  shift, and go to state 12


State 6

    3 function_header_: error ';' .

    $default  reduce using rule 3 (function_header_)


State 7

    4 function_header: FUNCTION IDENTIFIER . parameters RETURNS type

    IDENTIFIER  shift, and go to state 13

    $default  reduce using rule 7 (parameters)

    parameters  go to state 14
    parameter   go to state 15


State 8

    0 $accept: function $end .

    $default  accept


State 9

   10 variable_: error .

    $default  reduce using rule 10 (variable_)


State 10

    1 function: function_header_ variable_ . body

    BEGIN_  shift, and go to state 16

    body  go to state 17


State 11

    9 variable_: variable .
   11 variable: variable . IDENTIFIER ':' type IS statement_

    IDENTIFIER  shift, and go to state 18

    $default  reduce using rule 9 (variable_)


State 12

    2 function_header_: function_header ';' .

    $default  reduce using rule 2 (function_header_)


State 13

    8 parameter: IDENTIFIER . ':' type

    ':'  shift, and go to state 19


State 14

    4 function_header: FUNCTION IDENTIFIER parameters . RETURNS type

    RETURNS  shift, and go to state 20


State 15

    5 parameters: parameter .
    6           | parameter . ',' parameters

    ','  shift, and go to state 21

    $default  reduce using rule 5 (parameters)


State 16

   16 body: BEGIN_ . statement_ END ';'

    error         shift, and go to state 22
    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    NOTOP         shift, and go to state 25
    REDUCE        shift, and go to state 26
    CASE          shift, and go to state 27
    IF            shift, and go to state 28
    BOOL_LITERAL  shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    '('           shift, and go to state 31

    statement_  go to state 32
    statement   go to state 33
    expression  go to state 34
    and         go to state 35
    relation    go to state 36
    term        go to state 37
    factor      go to state 38
    exponent    go to state 39
    negation    go to state 40
    primary     go to state 41


State 17

    1 function: function_header_ variable_ body .

    $default  reduce using rule 1 (function)


State 18

   11 variable: variable IDENTIFIER . ':' type IS statement_

    ':'  shift, and go to state 42


State 19

    8 parameter: IDENTIFIER ':' . type

    BOOLEAN  shift, and go to state 43
    INTEGER  shift, and go to state 44
    REAL     shift, and go to state 45

    type  go to state 46


State 20

    4 function_header: FUNCTION IDENTIFIER parameters RETURNS . type

    BOOLEAN  shift, and go to state 43
    INTEGER  shift, and go to state 44
    REAL     shift, and go to state 45

    type  go to state 47


State 21

    6 parameters: parameter ',' . parameters

    IDENTIFIER  shift, and go to state 13

    $default  reduce using rule 7 (parameters)

    parameters  go to state 48
    parameter   go to state 15


State 22

   18 statement_: error . ';'

    ';'  shift, and go to state 49


State 23

   50 primary: IDENTIFIER .

    $default  reduce using rule 50 (primary)


State 24

   47 primary: INT_LITERAL .

    $default  reduce using rule 47 (primary)


State 25

   44 negation: NOTOP . primary

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    BOOL_LITERAL  shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    '('           shift, and go to state 31

    primary  go to state 50


State 26

   20 statement: REDUCE . operator reductions ENDREDUCE

    ADDOP  shift, and go to state 51
    MULOP  shift, and go to state 52

    operator  go to state 53


State 27

   22 statement: CASE . expression IS case_ OTHERS ARROW statement ';' ENDCASE

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    NOTOP         shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    '('           shift, and go to state 31

    expression  go to state 54
    and         go to state 35
    relation    go to state 36
    term        go to state 37
    factor      go to state 38
    exponent    go to state 39
    negation    go to state 40
    primary     go to state 41


State 28

   21 statement: IF . expression THEN statement ';' ELSE statement ';' ENDIF

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    NOTOP         shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    '('           shift, and go to state 31

    expression  go to state 55
    and         go to state 35
    relation    go to state 36
    term        go to state 37
    factor      go to state 38
    exponent    go to state 39
    negation    go to state 40
    primary     go to state 41


State 29

   49 primary: BOOL_LITERAL .

    $default  reduce using rule 49 (primary)


State 30

   48 primary: REAL_LITERAL .

    $default  reduce using rule 48 (primary)


State 31

   46 primary: '(' . expression ')'

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    NOTOP         shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    '('           shift, and go to state 31

    expression  go to state 56
    and         go to state 35
    relation    go to state 36
    term        go to state 37
    factor      go to state 38
    exponent    go to state 39
    negation    go to state 40
    primary     go to state 41


State 32

   16 body: BEGIN_ statement_ . END ';'

    END  shift, and go to state 57


State 33

   17 statement_: statement . ';'

    ';'  shift, and go to state 58


State 34

   19 statement: expression .
   31 expression: expression . OROP and

    OROP  shift, and go to state 59

    $default  reduce using rule 19 (statement)


State 35

   32 expression: and .
   33 and: and . ANDOP relation

    ANDOP  shift, and go to state 60

    $default  reduce using rule 32 (expression)


State 36

   34 and: relation .
   35 relation: relation . RELOP term

    RELOP  shift, and go to state 61

    $default  reduce using rule 34 (and)


State 37

   36 relation: term .
   37 term: term . ADDOP factor

    ADDOP  shift, and go to state 62

    $default  reduce using rule 36 (relation)


State 38

   38 term: factor .
   39 factor: factor . MULOP exponent
   40       | factor . REMOP exponent

    MULOP  shift, and go to state 63
    REMOP  shift, and go to state 64

    $default  reduce using rule 38 (term)


State 39

   41 factor: exponent .

    $default  reduce using rule 41 (factor)


State 40

   42 exponent: negation . EXPOP exponent
   43         | negation .

    EXPOP  shift, and go to state 65

    $default  reduce using rule 43 (exponent)


State 41

   45 negation: primary .

    $default  reduce using rule 45 (negation)


State 42

   11 variable: variable IDENTIFIER ':' . type IS statement_

    BOOLEAN  shift, and go to state 43
    INTEGER  shift, and go to state 44
    REAL     shift, and go to state 45

    type  go to state 66


State 43

   15 type: BOOLEAN .

    $default  reduce using rule 15 (type)


State 44

   13 type: INTEGER .

    $default  reduce using rule 13 (type)


State 45

   14 type: REAL .

    $default  reduce using rule 14 (type)


State 46

    8 parameter: IDENTIFIER ':' type .

    $default  reduce using rule 8 (parameter)


State 47

    4 function_header: FUNCTION IDENTIFIER parameters RETURNS type .

    $default  reduce using rule 4 (function_header)


State 48

    6 parameters: parameter ',' parameters .

    $default  reduce using rule 6 (parameters)


State 49

   18 statement_: error ';' .

    $default  reduce using rule 18 (statement_)


State 50

   44 negation: NOTOP primary .

    $default  reduce using rule 44 (negation)


State 51

   27 operator: ADDOP .

    $default  reduce using rule 27 (operator)


State 52

   28 operator: MULOP .

    $default  reduce using rule 28 (operator)


State 53

   20 statement: REDUCE operator . reductions ENDREDUCE

    $default  reduce using rule 30 (reductions)

    reductions  go to state 67


State 54

   22 statement: CASE expression . IS case_ OTHERS ARROW statement ';' ENDCASE
   31 expression: expression . OROP and

    OROP  shift, and go to state 59
    IS    shift, and go to state 68


State 55

   21 statement: IF expression . THEN statement ';' ELSE statement ';' ENDIF
   31 expression: expression . OROP and

    OROP  shift, and go to state 59
    THEN  shift, and go to state 69


State 56

   31 expression: expression . OROP and
   46 primary: '(' expression . ')'

    OROP  shift, and go to state 59
    ')'   shift, and go to state 70


State 57

   16 body: BEGIN_ statement_ END . ';'

    ';'  shift, and go to state 71


State 58

   17 statement_: statement ';' .

    $default  reduce using rule 17 (statement_)


State 59

   31 expression: expression OROP . and

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    NOTOP         shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    '('           shift, and go to state 31

    and       go to state 72
    relation  go to state 36
    term      go to state 37
    factor    go to state 38
    exponent  go to state 39
    negation  go to state 40
    primary   go to state 41


State 60

   33 and: and ANDOP . relation

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    NOTOP         shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    '('           shift, and go to state 31

    relation  go to state 73
    term      go to state 37
    factor    go to state 38
    exponent  go to state 39
    negation  go to state 40
    primary   go to state 41


State 61

   35 relation: relation RELOP . term

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    NOTOP         shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    '('           shift, and go to state 31

    term      go to state 74
    factor    go to state 38
    exponent  go to state 39
    negation  go to state 40
    primary   go to state 41


State 62

   37 term: term ADDOP . factor

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    NOTOP         shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    '('           shift, and go to state 31

    factor    go to state 75
    exponent  go to state 39
    negation  go to state 40
    primary   go to state 41


State 63

   39 factor: factor MULOP . exponent

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    NOTOP         shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    '('           shift, and go to state 31

    exponent  go to state 76
    negation  go to state 40
    primary   go to state 41


State 64

   40 factor: factor REMOP . exponent

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    NOTOP         shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    '('           shift, and go to state 31

    exponent  go to state 77
    negation  go to state 40
    primary   go to state 41


State 65

   42 exponent: negation EXPOP . exponent

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    NOTOP         shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    '('           shift, and go to state 31

    exponent  go to state 78
    negation  go to state 40
    primary   go to state 41


State 66

   11 variable: variable IDENTIFIER ':' type . IS statement_

    IS  shift, and go to state 79


State 67

   20 statement: REDUCE operator reductions . ENDREDUCE
   29 reductions: reductions . statement_

    error         shift, and go to state 22
    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    NOTOP         shift, and go to state 25
    ENDREDUCE     shift, and go to state 80
    REDUCE        shift, and go to state 26
    CASE          shift, and go to state 27
    IF            shift, and go to state 28
    BOOL_LITERAL  shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    '('           shift, and go to state 31

    statement_  go to state 81
    statement   go to state 33
    expression  go to state 34
    and         go to state 35
    relation    go to state 36
    term        go to state 37
    factor      go to state 38
    exponent    go to state 39
    negation    go to state 40
    primary     go to state 41


State 68

   22 statement: CASE expression IS . case_ OTHERS ARROW statement ';' ENDCASE

    error  shift, and go to state 82

    OTHERS  reduce using rule 26 (case)
    WHEN    reduce using rule 26 (case)

    case_  go to state 83
    case   go to state 84


State 69

   21 statement: IF expression THEN . statement ';' ELSE statement ';' ENDIF

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    NOTOP         shift, and go to state 25
    REDUCE        shift, and go to state 26
    CASE          shift, and go to state 27
    IF            shift, and go to state 28
    BOOL_LITERAL  shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    '('           shift, and go to state 31

    statement   go to state 85
    expression  go to state 34
    and         go to state 35
    relation    go to state 36
    term        go to state 37
    factor      go to state 38
    exponent    go to state 39
    negation    go to state 40
    primary     go to state 41


State 70

   46 primary: '(' expression ')' .

    $default  reduce using rule 46 (primary)


State 71

   16 body: BEGIN_ statement_ END ';' .

    $default  reduce using rule 16 (body)


State 72

   31 expression: expression OROP and .
   33 and: and . ANDOP relation

    ANDOP  shift, and go to state 60

    $default  reduce using rule 31 (expression)


State 73

   33 and: and ANDOP relation .
   35 relation: relation . RELOP term

    RELOP  shift, and go to state 61

    $default  reduce using rule 33 (and)


State 74

   35 relation: relation RELOP term .
   37 term: term . ADDOP factor

    ADDOP  shift, and go to state 62

    $default  reduce using rule 35 (relation)


State 75

   37 term: term ADDOP factor .
   39 factor: factor . MULOP exponent
   40       | factor . REMOP exponent

    MULOP  shift, and go to state 63
    REMOP  shift, and go to state 64

    $default  reduce using rule 37 (term)


State 76

   39 factor: factor MULOP exponent .

    $default  reduce using rule 39 (factor)


State 77

   40 factor: factor REMOP exponent .

    $default  reduce using rule 40 (factor)


State 78

   42 exponent: negation EXPOP exponent .

    $default  reduce using rule 42 (exponent)


State 79

   11 variable: variable IDENTIFIER ':' type IS . statement_

    error         shift, and go to state 22
    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    NOTOP         shift, and go to state 25
    REDUCE        shift, and go to state 26
    CASE          shift, and go to state 27
    IF            shift, and go to state 28
    BOOL_LITERAL  shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    '('           shift, and go to state 31

    statement_  go to state 86
    statement   go to state 33
    expression  go to state 34
    and         go to state 35
    relation    go to state 36
    term        go to state 37
    factor      go to state 38
    exponent    go to state 39
    negation    go to state 40
    primary     go to state 41


State 80

   20 statement: REDUCE operator reductions ENDREDUCE .

    $default  reduce using rule 20 (statement)


State 81

   29 reductions: reductions statement_ .

    $default  reduce using rule 29 (reductions)


State 82

   24 case_: error .

    $default  reduce using rule 24 (case_)


State 83

   22 statement: CASE expression IS case_ . OTHERS ARROW statement ';' ENDCASE

    OTHERS  shift, and go to state 87


State 84

   23 case_: case .
   25 case: case . WHEN INT_LITERAL ARROW statement_

    WHEN  shift, and go to state 88

    $default  reduce using rule 23 (case_)


State 85

   21 statement: IF expression THEN statement . ';' ELSE statement ';' ENDIF

    ';'  shift, and go to state 89


State 86

   11 variable: variable IDENTIFIER ':' type IS statement_ .

    $default  reduce using rule 11 (variable)


State 87

   22 statement: CASE expression IS case_ OTHERS . ARROW statement ';' ENDCASE

    ARROW  shift, and go to state 90


State 88

   25 case: case WHEN . INT_LITERAL ARROW statement_

    INT_LITERAL  shift, and go to state 91


State 89

   21 statement: IF expression THEN statement ';' . ELSE statement ';' ENDIF

    ELSE  shift, and go to state 92


State 90

   22 statement: CASE expression IS case_ OTHERS ARROW . statement ';' ENDCASE

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    NOTOP         shift, and go to state 25
    REDUCE        shift, and go to state 26
    CASE          shift, and go to state 27
    IF            shift, and go to state 28
    BOOL_LITERAL  shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    '('           shift, and go to state 31

    statement   go to state 93
    expression  go to state 34
    and         go to state 35
    relation    go to state 36
    term        go to state 37
    factor      go to state 38
    exponent    go to state 39
    negation    go to state 40
    primary     go to state 41


State 91

   25 case: case WHEN INT_LITERAL . ARROW statement_

    ARROW  shift, and go to state 94


State 92

   21 statement: IF expression THEN statement ';' ELSE . statement ';' ENDIF

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    NOTOP         shift, and go to state 25
    REDUCE        shift, and go to state 26
    CASE          shift, and go to state 27
    IF            shift, and go to state 28
    BOOL_LITERAL  shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    '('           shift, and go to state 31

    statement   go to state 95
    expression  go to state 34
    and         go to state 35
    relation    go to state 36
    term        go to state 37
    factor      go to state 38
    exponent    go to state 39
    negation    go to state 40
    primary     go to state 41


State 93

   22 statement: CASE expression IS case_ OTHERS ARROW statement . ';' ENDCASE

    ';'  shift, and go to state 96


State 94

   25 case: case WHEN INT_LITERAL ARROW . statement_

    error         shift, and go to state 22
    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    NOTOP         shift, and go to state 25
    REDUCE        shift, and go to state 26
    CASE          shift, and go to state 27
    IF            shift, and go to state 28
    BOOL_LITERAL  shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    '('           shift, and go to state 31

    statement_  go to state 97
    statement   go to state 33
    expression  go to state 34
    and         go to state 35
    relation    go to state 36
    term        go to state 37
    factor      go to state 38
    exponent    go to state 39
    negation    go to state 40
    primary     go to state 41


State 95

   21 statement: IF expression THEN statement ';' ELSE statement . ';' ENDIF

    ';'  shift, and go to state 98


State 96

   22 statement: CASE expression IS case_ OTHERS ARROW statement ';' . ENDCASE

    ENDCASE  shift, and go to state 99


State 97

   25 case: case WHEN INT_LITERAL ARROW statement_ .

    $default  reduce using rule 25 (case)


State 98

   21 statement: IF expression THEN statement ';' ELSE statement ';' . ENDIF

    ENDIF  shift, and go to state 100


State 99

   22 statement: CASE expression IS case_ OTHERS ARROW statement ';' ENDCASE .

    $default  reduce using rule 22 (statement)


State 100

   21 statement: IF expression THEN statement ';' ELSE statement ';' ENDIF .

    $default  reduce using rule 21 (statement)
